<#@ template language="C#" debug="true" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter name="resource" type="Comformation.CodeBuilder.ResourceClass" #>
using System;
using System.Collections.Generic;
using Comformation.IntrinsicFunctions;

namespace <#= resource.Namespace #>
{
    /// <summary>
    ///  <#= resource.Documentation #>
    /// </summary>
    public class <#= resource.Name #>Resource : ResourceBase
    {
        public class <#= resource.Name #>Properties
        {
<# 
    foreach (var property in resource.Properties)
    { 
#>
            /// <summary>
            ///  <#= property.Documentation #>
            /// </summary>
			public Union<<#= property.Type #>, IntrinsicFunction> <#= property.Name #> { get; set; }

<# 
    }
#>
        }
    
        public string Type { get; } = "<#= resource.Type #>";
        
        public <#= resource.Name #>Properties Properties { get; } = new <#= resource.Name #>Properties();
    }
<#
	if (resource.Attributes.Any())
	{
#>

	public static class <#= resource.Name #>Attributes
	{
<# 
    foreach (var attr in resource.Attributes)
    { 
#>
        public static readonly ResourceAttribute<<#= attr.Type #>> <#= attr.Name #> = new ResourceAttribute<<#= attr.Type #>>("<#= string.Join("\", \"", attr.Value.Split('.')) #>");
<# 
    }
#>
	}
<# 
    }
#>
}
